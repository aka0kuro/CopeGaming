{"ast":null,"code":"var _jsxFileName = \"/Users/hxt365/GolandProjects/cloud-gaming/web/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { decodeBase64, encodeBase64 } from \"./utils\";\nimport VideoStream from \"./components/VideoStream\";\nimport \"./App.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [ws, setWs] = useState(null);\n  const [remoteStream, setRemoteStream] = useState(null);\n  useEffect(() => {\n    const ws = new WebSocket(process.env.REACT_APP_WS_ENDPOINT);\n\n    ws.onopen = () => {\n      setWs(ws);\n    };\n\n    ws.onerror = err => {\n      console.log(\"Failed\", err);\n    };\n\n    return () => ws.close();\n  }, []);\n  useEffect(async () => {\n    if (ws === null) return;\n    const pc = new RTCPeerConnection({\n      iceServers: [{\n        urls: \"stun:stun.l.google.com:19302\"\n      }]\n    });\n\n    pc.ontrack = event => {\n      console.log(\"got track\", event);\n\n      if (event.streams && event.streams[0]) {\n        setRemoteStream(event.streams[0]);\n      } else {\n        let inboundStream = null;\n\n        if (!remoteStream) {\n          inboundStream = new MediaStream();\n          inboundStream.addTrack(event.track);\n        } else {\n          inboundStream = { ...remoteStream\n          };\n          inboundStream.addTrack(event.track);\n        }\n\n        setRemoteStream(inboundStream);\n      }\n    };\n\n    pc.onicecandidate = event => {\n      const iceCandidate = event.candidate;\n\n      if (iceCandidate) {\n        ws.send(JSON.stringify({\n          type: \"ice-candidate\",\n          sender: \"client\",\n          receiver: \"coordinator\",\n          data: encodeBase64(JSON.stringify(iceCandidate))\n        }));\n      }\n    };\n\n    pc.oniceconnectionstatechange = event => {\n      console.log(event.target.iceConnectionState);\n    };\n\n    const msg = {\n      type: \"start\",\n      sender: \"client\",\n      receiver: \"coordinator\"\n    };\n    ws.send(JSON.stringify(msg));\n\n    ws.onmessage = async event => {\n      const msg = JSON.parse(event.data);\n      console.log(msg);\n\n      if (msg.type === \"sdp\") {\n        const offer = JSON.parse(decodeBase64(msg.data));\n        await pc.setRemoteDescription(new RTCSessionDescription(offer));\n        const answer = await pc.createAnswer();\n        ws.send(JSON.stringify({\n          type: \"sdp\",\n          sender: \"client\",\n          receiver: \"coordinator\",\n          data: encodeBase64(JSON.stringify(answer))\n        }));\n        await pc.setLocalDescription(answer);\n      } else if (msg.type === \"ice-candidate\") {\n        const ice = JSON.parse(decodeBase64(msg.data));\n        pc.addIceCandidate(new RTCIceCandidate(ice));\n      }\n    };\n\n    return () => pc.close();\n  }, [ws]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(VideoStream, {\n      src: remoteStream,\n      height: \"200px\",\n      width: \"300px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WgWlPxH73hCN8OgXgsCwjggKqhU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hxt365/GolandProjects/cloud-gaming/web/src/App.js"],"names":["React","useState","useEffect","decodeBase64","encodeBase64","VideoStream","App","ws","setWs","remoteStream","setRemoteStream","WebSocket","process","env","REACT_APP_WS_ENDPOINT","onopen","onerror","err","console","log","close","pc","RTCPeerConnection","iceServers","urls","ontrack","event","streams","inboundStream","MediaStream","addTrack","track","onicecandidate","iceCandidate","candidate","send","JSON","stringify","type","sender","receiver","data","oniceconnectionstatechange","target","iceConnectionState","msg","onmessage","parse","offer","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","ice","addIceCandidate","RTCIceCandidate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { decodeBase64, encodeBase64 } from \"./utils\";\n\nimport VideoStream from \"./components/VideoStream\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  const [ws, setWs] = useState(null);\n  const [remoteStream, setRemoteStream] = useState(null);\n\n  useEffect(() => {\n    const ws = new WebSocket(process.env.REACT_APP_WS_ENDPOINT);\n\n    ws.onopen = () => {\n      setWs(ws);\n    };\n\n    ws.onerror = (err) => {\n      console.log(\"Failed\", err);\n    };\n\n    return () => ws.close();\n  }, []);\n\n  useEffect(async () => {\n    if (ws === null) return;\n\n    const pc = new RTCPeerConnection({\n      iceServers: [\n        {\n          urls: \"stun:stun.l.google.com:19302\",\n        },\n      ],\n    });\n\n    pc.ontrack = (event) => {\n      console.log(\"got track\", event);\n      if (event.streams && event.streams[0]) {\n        setRemoteStream(event.streams[0]);\n      } else {\n        let inboundStream = null;\n        if (!remoteStream) {\n          inboundStream = new MediaStream();\n          inboundStream.addTrack(event.track);\n        } else {\n          inboundStream = { ...remoteStream };\n          inboundStream.addTrack(event.track);\n        }\n        setRemoteStream(inboundStream);\n      }\n    };\n\n    pc.onicecandidate = (event) => {\n      const iceCandidate = event.candidate;\n\n      if (iceCandidate) {\n        ws.send(\n          JSON.stringify({\n            type: \"ice-candidate\",\n            sender: \"client\",\n            receiver: \"coordinator\",\n            data: encodeBase64(JSON.stringify(iceCandidate)),\n          })\n        );\n      }\n    };\n\n    pc.oniceconnectionstatechange = (event) => {\n      console.log(event.target.iceConnectionState);\n    };\n\n    const msg = {\n      type: \"start\",\n      sender: \"client\",\n      receiver: \"coordinator\",\n    };\n    ws.send(JSON.stringify(msg));\n\n    ws.onmessage = async (event) => {\n      const msg = JSON.parse(event.data);\n      console.log(msg);\n      if (msg.type === \"sdp\") {\n        const offer = JSON.parse(decodeBase64(msg.data));\n        await pc.setRemoteDescription(new RTCSessionDescription(offer));\n\n        const answer = await pc.createAnswer();\n        ws.send(\n          JSON.stringify({\n            type: \"sdp\",\n            sender: \"client\",\n            receiver: \"coordinator\",\n            data: encodeBase64(JSON.stringify(answer)),\n          })\n        );\n        await pc.setLocalDescription(answer);\n      } else if (msg.type === \"ice-candidate\") {\n        const ice = JSON.parse(decodeBase64(msg.data));\n        pc.addIceCandidate(new RTCIceCandidate(ice));\n      }\n    };\n\n    return () => pc.close();\n  }, [ws]);\n\n  return (\n    <div className=\"App\">\n      <VideoStream src={remoteStream} height=\"200px\" width=\"300px\" />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}